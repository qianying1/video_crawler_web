<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--引入配置属性文件 -->
    <!--<context:property-placeholder location="classpath:redis.properties" />-->
    <!--<mvc:resources mapping="redisPro" location="classpath:redis.properties"/>-->
    <!--<bean id="redisConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations"> &lt;!&ndash; PropertyPlaceholderConfigurer类中有个locations属性，接收的是一个数组，即我们可以在下面配好多个properties文件 &ndash;&gt;
            <array>
                <value>classpath:redis.properties</value>
            </array>
        </property>
    </bean>-->
    <util:properties id="redisConfig" location="classpath:redis.properties"/>
    <!-- redis -->
    <!-- jedis 配置 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="#{redisConfig['redis.maxIdle']}"/>
        <property name="maxWaitMillis" value="#{redisConfig['redis.maxWait']}"/>
        <property name="testOnBorrow" value="#{redisConfig['redis.testOnBorrow']}"/>
    </bean>
    <!-- redis服务器中心 -->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="poolConfig" ref="poolConfig"/>
        <property name="port" value="#{redisConfig['redis.port']}"/>
        <property name="hostName" value="#{redisConfig['redis.host']}"/>
        <property name="password" value="#{redisConfig['redis.password']}"/>
        <property name="timeout" value="#{redisConfig['redis.timeout']}"></property>
    </bean>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <!-- <property name="valueSerializer" >
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property> -->
    </bean>
    <!--<bean id="redisUtil" class="cn.qianying.graduaction.redis.RedisUtil">
        <property name="redisTemplate" ref="redisTemplate"/>
    </bean>-->
    <!--     拦截器     -->
    <!--<mvc:interceptors>
        &lt;!&ndash; 分发拦截器 &ndash;&gt;
        <mvc:interceptor>
            <mvc:mapping path="/video/**"/>
            <mvc:mapping path="/go/**"/>
            <bean class="cn.qianying.graduaction.interceptor.DispatcherInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>-->
</beans>